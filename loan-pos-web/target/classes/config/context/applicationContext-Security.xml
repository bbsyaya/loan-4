<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">
                        
    <http pattern="/js/**" security="none"/>
    <http pattern="/css/**" security="none"></http>
    <http pattern="/login.jsp" security="none"/>
    <http pattern="/plugs/**" security="none"></http>
    
    <http use-expressions="true" entry-point-ref="authenticationProcessingFilterEntryPoint">
        <logout invalidate-session="true" />
	    <!-- <intercept-url pattern="/index" access="hasRole('ROLE_ADMIN')"/>  -->
	    <intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_SYS_ADMIN','ROLE_ADMIN')"/>
	    <intercept-url pattern="/user/userRegister" access="isAnonymous()"/>
	    <intercept-url pattern="/user/modPassword" access="isAuthenticated()"/>
	    <intercept-url pattern="/workbench/**" access="isAuthenticated()"/>
	    <intercept-url pattern="/index*" access="isAuthenticated()"/>
        <!--  实现免登陆验证 
        <remember-me user-service-ref="userDetailService"/> -->
        <remember-me />
        <session-management invalid-session-url="/login.do">
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
        </session-management>
        
    	<custom-filter ref="loginFilter" position="FORM_LOGIN_FILTER"  />
		 <!-- <custom-filter ref="securityFilter" before="FILTER_SECURITY_INTERCEPTOR"/> -->
		
    </http> 
    <!-- 登录验证器 -->
    <beans:bean id="loginFilter"
		class="com.hrbb.loan.web.security.HrbbUsernamePasswordAuthenticationFilter">
		<!-- 处理登录的action -->
		<beans:property name="filterProcessesUrl" value="/j_spring_security_check"></beans:property>
		<!-- 验证成功后的处理-->
		<beans:property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"></beans:property>
                <!-- 验证失败后的处理-->
		<beans:property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler"></beans:property>
		<beans:property name="authenticationManager" ref="myAuthenticationManager"></beans:property>
		<!-- 注入DAO为了查询相应的用户 -->
		<beans:property name="userService" ref="userService"></beans:property>
	</beans:bean>
	<beans:bean id="loginLogAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/index.do"></beans:property>
	</beans:bean>
	<beans:bean id="simpleUrlAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<!-- 可以配置相应的跳转方式。属性forwardToDestination为true采用forward false为sendRedirect -->
		<beans:property name="defaultFailureUrl" value="/login.do"></beans:property>
	</beans:bean>
	
    <!-- 实现了UserDetailsService的Bean -->
    <authentication-manager alias="myAuthenticationManager">
        <authentication-provider user-service-ref="userDetailService" >
           <!--  <password-encoder hash="md5" />  -->
        </authentication-provider>
    </authentication-manager>
	
	<!-- 未登录的切入点 -->
	<beans:bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login.do"></beans:property>
	</beans:bean>
</beans:beans>