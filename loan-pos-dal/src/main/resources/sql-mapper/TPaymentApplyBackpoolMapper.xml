<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TPaymentApplyBackpoolMapper" >
  <resultMap id="BaseResultMap" type="com.hrbb.loan.pos.dao.entity.TPaymentApplyBackpool" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="payApplyId" property="payApplyId" jdbcType="VARCHAR" />
    <result column="backPoolReason" property="backPoolReason" jdbcType="VARCHAR" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, payApplyId, backPoolReason, operator, createTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_payment_apply_backpool
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_payment_apply_backpool
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hrbb.loan.pos.dao.entity.TPaymentApplyBackpool" >
    insert into t_payment_apply_backpool (id, payApplyId, backPoolReason, 
      operator, createTime)
    values (#{id,jdbcType=INTEGER}, #{payApplyId,jdbcType=VARCHAR}, #{backPoolReason,jdbcType=VARCHAR}, 
      #{operator,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hrbb.loan.pos.dao.entity.TPaymentApplyBackpool" >
    insert into t_payment_apply_backpool
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="payApplyId != null" >
        payApplyId,
      </if>
      <if test="backPoolReason != null" >
        backPoolReason,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="payApplyId != null" >
        #{payApplyId,jdbcType=VARCHAR},
      </if>
      <if test="backPoolReason != null" >
        #{backPoolReason,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hrbb.loan.pos.dao.entity.TPaymentApplyBackpool" >
    update t_payment_apply_backpool
    <set >
      <if test="payApplyId != null" >
        payApplyId = #{payApplyId,jdbcType=VARCHAR},
      </if>
      <if test="backPoolReason != null" >
        backPoolReason = #{backPoolReason,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hrbb.loan.pos.dao.entity.TPaymentApplyBackpool" >
    update t_payment_apply_backpool
    set payApplyId = #{payApplyId,jdbcType=VARCHAR},
      backPoolReason = #{backPoolReason,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>