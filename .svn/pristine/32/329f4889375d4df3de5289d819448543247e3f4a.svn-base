package com.hrbb.loan.quartz;

import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Component;

import com.hrbb.loan.channel.sms.SmsProcesser;
import com.hrbb.loan.pos.biz.backstage.inter.ISmsSenderBiz;
import com.hrbb.loan.pos.factory.SysConfigFactory;
import com.hrbb.loan.pos.util.StringUtil;

@Component("sendSmsMessageTask")
public class SendSmsMessageTask {

    private static final Logger LOG = LoggerFactory.getLogger(SendSmsMessageTask.class);

    @Autowired
    private ISmsSenderBiz       senderBiz;

    @Autowired
    @Qualifier("smsProcesser")
    private SmsProcesser        smsProcesser;

    public void execute() {

        try {
            String switchFlag = SysConfigFactory.getInstance().getService("quartzSwitchService")
                .getPropertyValue("smsSwitch");
            if (StringUtil.isEmpty(switchFlag) || "false".equals(switchFlag.toLowerCase())) {
                LOG.info("短信开关为false,不发送短信");
                return;
            }
            //发送短信
            List<Map<String, Object>> resList = senderBiz.getAllSmsMessage();
            LOG.debug("发送短信开始。。。。");
            for (Map<String, Object> map : resList) {
                String tempId = (String) map.get("tempId");
                if (tempId != null && !tempId.startsWith("58")) {
                    String sendContent = (String) map.get("sendContent");
                    String mobile = (String) map.get("mobile");
                    if (smsProcesser.sendSmsNoTemplate(mobile, sendContent)) {
                        //如果成功删除记录
                        senderBiz.deleteSmsMessage((Integer) map.get("id"));
                        //将短信记录插入短信历史表中
                        senderBiz.insertSmsMessageHist(tempId, mobile, sendContent);
                    } else {
                        LOG.debug("发送失败");
                    }
                }
            }
            LOG.debug("发送短信结束。。。。");
        } catch (Exception e) {
            LOG.error("发送短信异常:" + e.getMessage());
        }
    }
}
