package com.hrbb.loan.spi.ZZ;

import java.util.Date;
import java.util.Iterator;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.google.common.collect.Maps;
import com.hrbb.loan.constants.CreditApplyConstants;
import com.hrbb.loan.pos.service.LoanPosCreditApplyService;
import com.hrbb.loan.pos.util.StringUtil;
import com.hrbb.loan.spiconstants.HServiceReturnCode;
import com.hrbb.sh.framework.HResponse;
import com.hrbb.sh.framework.HServiceException;

/**
 * TransType:AP0025 -> 业务申请撤销.
 * 
 * @author xiongshaogang
 * @version $Id: ZZAPPCreditApplyCancelServiceImpl.java, v 0.1 2015年4月21日 下午2:01:29 xiongshaogang Exp $
 */
@Service("zzAppCreditApplyCancel")
public class ZZAPPCreditApplyCancelServiceImpl extends ZZAPPFoundationServiceImpl {

	private final Logger logger = LoggerFactory
			.getLogger(ZZAPPCreditApplyCancelServiceImpl.class);

	@Autowired
	private LoanPosCreditApplyService loanPosCreditApplyService;

	/**
	 * @see com.hrbb.sh.framework.HService#serve(com.hrbb.sh.framework.HRequest)
	 */
	@Override
	protected HResponse doProcesser(HResponse resp, Map<String, String> headerMap,
                                    Map<String, String> bodyMap) throws HServiceException {

		logger.debug("in ZZAPPCreditApplyCancelServiceImpl...");
		
		// 1. 组装更新字段
        Map<String, Object> updateMap = Maps.newHashMap();
        if (StringUtil.isNotEmpty(bodyMap.get("loanid"))) {
            updateMap.put("loanId", bodyMap.get("loanid"));
        }
        if (StringUtil.isNotEmpty(bodyMap.get("custid"))) {
            updateMap.put("custId", bodyMap.get("custid"));
        }
        updateMap.put("applyStatus", CreditApplyConstants.STATUS_ACTIVE_CANCEL);
        updateMap.put("lastOperTime", new Date());
        updateMap.put("lastOperId", "system");
        updateMap.put("applyStatusEnd", "41");
         
		
		// 2. 更新处理
        int ret = loanPosCreditApplyService.updateApplyStatus(updateMap);
        if (ret != 1) {
            logger.error("更新条数异常:[]", ret);
            bodyMap.put("respcode", HServiceReturnCode.RETURN_FAIL.getReturnCode());
            bodyMap.put("respmsg", HServiceReturnCode.RETURN_FAIL.getReturnMessage());
            resp.setRespCode(HServiceReturnCode.RETURN_FAIL.getReturnCode());
            resp.setRespMessage(HServiceReturnCode.RETURN_FAIL.getReturnMessage());
            return getBlankHResponse(resp, headerMap, bodyMap);
        }
        
        // 3 发送站内消息
        try {
            userProcesser.createMessage(1, 0, "业务申请撤销通知", "尊敬的持卡人，你好，您有一笔业务申请已主动撤销。3个月内，您将不能再次申请贷款，请知悉！", 1, 2, Integer.parseInt((String)headerMap.get("UserId")), "通知");
        } catch (Exception e) {
            logger.error("向用户系统发送站内消息失败");
        }
		
		// 4. 回写成功
		Map<String, Object> rootMap = Maps.newHashMap();
		bodyMap = Maps.newHashMap();
		bodyMap.put("respcode", HServiceReturnCode.SUCCESS.getReturnCode());
		bodyMap.put("respmsg", HServiceReturnCode.SUCCESS.getReturnMessage());
		
		// 4.1 签名处理
        Map<String, Object> signMap = Maps.newHashMap();
        for (Map.Entry<String, String> en : bodyMap.entrySet()) {
            String key = en.getKey();
            signMap.put(key, en.getValue());
        }
        headerMap.put("Mac", sign(signMap, null));
		
        rootMap.put("HrbbHeader", headerMap);
        rootMap.put("HrbbBody", bodyMap);
        resp.setRespCode(HServiceReturnCode.SUCCESS.getReturnCode());
        resp.setRespMessage(HServiceReturnCode.SUCCESS.getReturnMessage());
        resp.setRespTime(new Date());
        resp.setProperties(rootMap);
        logger.info("回写数据: " + resp.toString());
        logger.debug("out ZZAPPCreditApplyCancelServiceImpl...");
		return resp;
	}
	
	/**
     * 请求包校验处理.
     * 
     * @param headerMap
     * @param bodyMap
     * @return
     * @throws Exception 
     */
    protected boolean validate(Map<String, String> headerMap, Map<String, String> bodyMap,
                             HResponse resp) throws HServiceException {
        if (!validateHeader(headerMap, bodyMap, resp)) {
            return false;
        }
        
        // 申请编号
        if (StringUtil.isEmpty(bodyMap.get("loanid"))
                && StringUtil.isEmpty(bodyMap.get("custid"))) {
            logger.error("申请编号为空:[]", bodyMap.get("loanid") + "|" + bodyMap.get("custid"));
            bodyMap.put("respcode", HServiceReturnCode.LOANID_ERROR.getReturnCode());
            bodyMap.put("respmsg", HServiceReturnCode.LOANID_ERROR.getReturnMessage());
            resp.setRespCode(HServiceReturnCode.LOANID_ERROR.getReturnCode());
            resp.setRespMessage(HServiceReturnCode.LOANID_ERROR.getReturnMessage());
            return false;
        }
        
        return true;
    }
}
