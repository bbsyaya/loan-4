package com.hrbb.loan.pos.service.impl;

import java.util.Date;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.google.common.collect.Maps;
import com.hrbb.loan.pos.dao.TAICAlidebtInfoDao;
import com.hrbb.loan.pos.dao.TAICBasicInfoDao;
import com.hrbb.loan.pos.dao.TAICCaseInfoDao;
import com.hrbb.loan.pos.dao.TAICEntinvInfoDao;
import com.hrbb.loan.pos.dao.TAICFrinvInfoDao;
import com.hrbb.loan.pos.dao.TAICFrpositionInfoDao;
import com.hrbb.loan.pos.dao.TAICOrderlistInfoDao;
import com.hrbb.loan.pos.dao.TAICPersonInfoDao;
import com.hrbb.loan.pos.dao.TAICPunishBreakInfoDao;
import com.hrbb.loan.pos.dao.TAICPunishedInfoDao;
import com.hrbb.loan.pos.dao.TAICShareHolderDao;
import com.hrbb.loan.pos.dao.TPoliceInfoDao;
import com.hrbb.loan.pos.service.PoliceAndAICConnectService;
import com.hrbb.loan.pos.util.ListUtil;
@Service("policeAndAICConnectService")
public class PoliceAndAICConnectServiceImpl implements
		PoliceAndAICConnectService {
	
	private static final String POS_CUST_NAME = "posCustName";

	@Autowired
	private TPoliceInfoDao tPoliceInfoDao;
	
	@Autowired
	private TAICAlidebtInfoDao taicAlidebtInfoDao;
	
	@Autowired
	private TAICBasicInfoDao taicBasicInfoDao;
	
	@Autowired
	private TAICCaseInfoDao taicCaseInfoDao;
	
	@Autowired
	private TAICEntinvInfoDao taicEntinvInfoDao;
	
	@Autowired
	private TAICOrderlistInfoDao taicOrderlistInfoDao;
	
	@Autowired
	private TAICPersonInfoDao taicPersonInfoDao;
	
	@Autowired
	private TAICPunishBreakInfoDao taicPunishBreakInfoDao;
	
	@Autowired
	private TAICPunishedInfoDao taicPunishedInfoDao;
	
	@Autowired
	private TAICShareHolderDao taicShareHolderDao;
	
	@Autowired
	private TAICFrinvInfoDao taicFrinvInfoDao;
	
	@Autowired
	private TAICFrpositionInfoDao taicFrpositionInfoDao;

	@Override
	public List<Map<String, Object>> queryPoliceInfoList(
			Map<String, Object> reqMap) {
		return tPoliceInfoDao.selectSelectiveMap(reqMap);
	}

	@Override
	public Map<String, Object> queryOnePoliceInfo(String custName, String idNo,
			Date queryTime) {
		Map<String, Object> reqMap = Maps.newHashMap();
		reqMap.put("custName", custName);
		reqMap.put("idNo", idNo);
		reqMap.put("queryTime", queryTime);
		List<Map<String, Object>> reqMaps = queryPoliceInfoList(reqMap);
		if(ListUtil.isNotEmpty(reqMaps)){
			return reqMaps.get(0);
		}else{
			return Maps.newHashMap();
		}
	}

	@Override
	public void insertPoliceInfo(Map<String, Object> reqMap) {
		tPoliceInfoDao.insertSelectiveMap(reqMap);
	}

	@Override
	public void insertAICAlidebtInfo(Map<String, Object> reqMap) {
		taicAlidebtInfoDao.insertSelectiveMap(reqMap);
	}

	@Override
	public void insertAICBasicInfo(Map<String, Object> reqMap) {
		taicBasicInfoDao.insertSelectiveMap(reqMap);
	}

	@Override
	public void insertAICCaseInfo(Map<String, Object> reqMap) {
		taicCaseInfoDao.insertSelectiveMap(reqMap);
	}

	@Override
	public void insertAICEntinvInfo(Map<String, Object> reqMap) {
		taicEntinvInfoDao.insertSelectiveMap(reqMap);
	}

	@Override
	public void insertAICOrderlistInfo(Map<String, Object> reqMap) {
		taicOrderlistInfoDao.insertSelectiveMap(reqMap);
	}

	@Override
	public void insertAICPersonInfo(Map<String, Object> reqMap) {
		taicPersonInfoDao.insertSelectiveMap(reqMap);
	}

	@Override
	public void insertAICPunishBreakInfo(Map<String, Object> reqMap) {
		taicPunishBreakInfoDao.insertSelectiveMap(reqMap);
	}

	@Override
	public void insertAICPunishedInfo(Map<String, Object> reqMap) {
		taicPunishedInfoDao.insertSelectiveMap(reqMap);
		
	}

	@Override
	public void insertAICShareHolder(Map<String, Object> reqMap) {
		taicShareHolderDao.insertSelectiveMap(reqMap);
	}

	@Override
	public List<Map<String, Object>> queryAICOrderlist(
			Map<String, Object> reqMap) {
		return taicOrderlistInfoDao.queryMap(reqMap);
	}

	@Override
	public Map<String, Object> queryOneAICOrderlist(String posCustName) {
		Map<String, Object> reqMap = Maps.newHashMap();
		reqMap.put(POS_CUST_NAME, posCustName);
		List<Map<String, Object>> resList = queryAICOrderlist(reqMap);
		if(ListUtil.isNotEmpty(resList)){
			return resList.get(0);
		}else{
			return Maps.newHashMap();
		}
		
	}

	@Override
	public void insertAICFrinvInfo(Map<String, Object> reqMap) {
		
		taicFrinvInfoDao.insertFrinvInfoMap(reqMap);
	}

	@Override
	public void insertAICFrpositionInfo(Map<String, Object> reqMap) {
		
		taicFrpositionInfoDao.insertSelectiveMap(reqMap);
	}

	@Override
	public List<Map<String, Object>> selectByCertNo(Map<String, Object> reqMap) {
		return tPoliceInfoDao.selectByCertNo(reqMap);
	}
	
	
}
