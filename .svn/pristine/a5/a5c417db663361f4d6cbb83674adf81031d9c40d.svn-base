package com.hrbb.loan.pos.biz.backstage.inter.impl.withholder;

import java.util.Calendar;

import javax.annotation.PostConstruct;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.hrbb.loan.pos.biz.backstage.inter.LoanPosContractManagementBiz;
import com.hrbb.loan.pos.dao.entity.TContractManagement;
import com.hrbb.loan.pos.dao.entity.TPaybackApplyInfo;
import com.hrbb.loan.pos.factory.SysConfigFactory;

@Service("withholderSelf")
public class WithholderSelf implements IWithholderService{
	

	private Logger logger = LoggerFactory.getLogger(this.getClass());
	
	@Autowired
	private LoanPosContractManagementBiz loanPosContractManagementBiz;
	
	private String canNotSendMessage = null;
	
	@PostConstruct
	private void init(){
		canNotSendMessage = SysConfigFactory.getInstance().getService("fundpool").getPropertyValue("cannotSendSms");
	}
	


	@Override
	public void withholder(TPaybackApplyInfo apply) {
		
		TContractManagement contract = loanPosContractManagementBiz.getContractByContNo(apply.getContNo());
		//只针对代扣
		if("02".equals(contract.getRepayMethod())){
			//代扣
			
			
			//如果失败
			if(false){
				//如果是资金池模式要扣保证金
				
				
				//判断时间如果不超过下午3点就发邮件和短信
				if(!canNotSendMessage.contains(contract.getChannel())){
					Calendar cal = Calendar.getInstance();
					if(cal.get(Calendar.HOUR_OF_DAY) < 15){
						logger.info("开始发送短信和邮件");
					}
					
				}
				
			}
			
		}else{
			logger.info(contract.getLoanId() + "非代扣申请");
		}
		
	}

}
