/**
 * 
 *	哈尔滨银行
 * Copyright (c) 2007-2015 HRBB,Inc.All Rights Reserved.
 */
package com.hrbb.loan.pos.tools.main.dataTransfer;

import java.io.BufferedReader;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.FileSystems;
import java.nio.file.Files;
import java.nio.file.Path;
import java.sql.Connection;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.google.common.collect.Lists;
import com.hrbb.loan.pos.dao.TCreditApplyDao;
import com.hrbb.loan.pos.dao.entity.TCreditApply;
import com.hrbb.loan.pos.dao.entity.TReceiptInfo;
import com.hrbb.loan.pos.util.FileUtil;
import com.hrbb.loan.pos.util.StringUtil;
import com.hrbb.pos.loan.tools.database.LoanDatabase;

/**
 * 
 * @author marco
 * @version $Id: DataTransfer.java, v 0.1 2015-6-12 下午2:00:14 marco Exp $
 */
public class DataTransfer {
	private final static Logger logger = LoggerFactory
			.getLogger(DataTransfer.class);

	private final static String CHARSET = "UTF-8";

	// 持久层会话工厂
	private static SqlSessionFactory sqlSessionFactory = null;
	static {
		sqlSessionFactory = LoanDatabase.getSqlSessionFactory();
	}
	/**
	 * 
	 * @param args
	 */
	public static void main(String[] args) {

		String pathStr = "C:\\work\\POSLOAN\\旧系统数据迁移\\all.json";
		logger.debug("pathStr=" + pathStr);

		// 获取数据文件内容
		String jsonStr = getDataFileStringByJson(pathStr);
		if (StringUtil.isEmpty(jsonStr)) {
			logger.debug("文件读取失败或文件内容为空！");
			return;
		}

		// 格式化数据，并插入数据库
		int result = insert(jsonStr);
		logger.debug("result=" + result);
		if (result == 0) {
			logger.debug("插入数据库成功。");
		} else {
			logger.debug("插入数据库失败！");
		}
	}

	/**
	 * 获取数据文件内容
	 * 
	 * @param filePath
	 * @return
	 */
	private static int insert(String jsonStr) {

		// 读取配置
		SqlSession sqlSession = sqlSessionFactory.openSession();
		
		List<Map<String, Object>> insertList = Lists.newArrayList();
		JSONObject jsonObject = JSONObject.parseObject(jsonStr);
		JSONArray data = JSONArray.parseArray(jsonObject.getString("RECORDS"));
		for (int i = 0; i < data.size(); ++i) {
			JSONObject jobj = data.getJSONObject(i);
			logger.debug("no=" + jobj.getString("no"));
			
			sqlSession.insert("TCreditApplyMapper.insertSelectiveMapBatch", insertList);
		}
		
		sqlSession.close();
		return 0;
	}

	/**
	 * 获取数据文件内容
	 * 
	 * @param filePath
	 * @return
	 */
	private static String getDataFileStringByJson(String filePath) {
		if (!FileUtil.checkFileExist(filePath)) {
			logger.error("文件不存在！");
			return null;
		}
		logger.debug("文件存在。");
		Path path = FileSystems.getDefault().getPath(filePath);
		// 设置文件的编码格式
		Charset cs = Charset.forName(CHARSET);
		BufferedReader br = null;
		StringBuilder sb = new StringBuilder();
		try {
			logger.debug("文件读取开始...");
			// 文件读取
			br = Files.newBufferedReader(path, cs);
			String line = null;
			while ((line = br.readLine()) != null) {
				sb.append(line);
			}
			logger.debug("文件读取成功。");
		} catch (IOException e) {
			logger.error("文件读取失败！", e);
			return null;
		} finally {
			// 关闭BufferedReader
			if (br != null) {
				try {
					br.close();
				} catch (IOException e) {
					logger.error("关闭BufferedReader失败！", e);
					return null;
				}
			}
		}
		return sb.toString();
	}
}
