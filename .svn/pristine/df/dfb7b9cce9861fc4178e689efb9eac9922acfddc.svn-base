<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TApprovingRateUplimitConfigMapper" >
  <resultMap id="BaseResultMap" type="com.hrbb.loan.pos.dao.entity.TApprovingRateUplimitConfig" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="amt_uplimit" property="amt_uplimit" jdbcType="DOUBLE" />
    <result column="rate_uplimit" property="rate_uplimit" jdbcType="DOUBLE" />
    <result column="deleted_flag" property="deleted_flag" jdbcType="VARCHAR" />
    <result column="valid_date" property="valid_date" jdbcType="DATE" />
    <result column="invalid_date" property="invalid_date" jdbcType="DATE" />
    <result column="create_date" property="create_date" jdbcType="DATE" />
    <result column="modify_date" property="modify_date" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, amt_uplimit, rate_uplimit, deleted_flag, valid_date, invalid_date, create_date, 
    modify_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_approving_rate_uplimit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_approving_rate_uplimit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hrbb.loan.pos.dao.entity.TApprovingRateUplimitConfig" >
    insert into t_approving_rate_uplimit (id, amt_uplimit, rate_uplimit, 
      deleted_flag, valid_date, invalid_date, 
      create_date, modify_date)
    values (#{id,jdbcType=INTEGER}, #{amt_uplimit,jdbcType=DOUBLE}, #{rate_uplimit,jdbcType=DOUBLE}, 
      #{deleted_flag,jdbcType=VARCHAR}, #{valid_date,jdbcType=DATE}, #{invalid_date,jdbcType=DATE}, 
      #{create_date,jdbcType=DATE}, #{modify_date,jdbcType=DATE})
  </insert>
  <insert id="saveApprovingRateUplimitConfig" parameterType="Map" >
    insert into t_approving_rate_uplimit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="amt_uplimit != null" >
        amt_uplimit,
      </if>
      <if test="rate_uplimit != null" >
        rate_uplimit,
      </if>
      <if test="deleted_flag != null" >
        deleted_flag,
      </if>
      <if test="valid_date != null" >
        valid_date,
      </if>
      <if test="invalid_date != null" >
        invalid_date,
      </if>
      <if test="create_date != null" >
        create_date,
      </if>
      <if test="modify_date != null" >
        modify_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="amt_uplimit != null" >
        #{amt_uplimit,jdbcType=DOUBLE},
      </if>
      <if test="rate_uplimit != null" >
        #{rate_uplimit,jdbcType=DOUBLE},
      </if>
      <if test="deleted_flag != null" >
        #{deleted_flag,jdbcType=VARCHAR},
      </if>
      <if test="valid_date != null" >
        #{valid_date,jdbcType=DATE},
      </if>
      <if test="invalid_date != null" >
        #{invalid_date,jdbcType=DATE},
      </if>
      <if test="create_date != null" >
        #{create_date,jdbcType=DATE},
      </if>
      <if test="modify_date != null" >
        #{modify_date,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByUpdateMap" parameterType="Map" >
    update t_approving_rate_uplimit
    <set >
      <if test="amt_uplimit != null" >
        amt_uplimit = #{amt_uplimit,jdbcType=DOUBLE},
      </if>
      <if test="rate_uplimit != null" >
        rate_uplimit = #{rate_uplimit,jdbcType=DOUBLE},
      </if>
      <if test="deleted_flag != null" >
        deleted_flag = #{deleted_flag,jdbcType=VARCHAR},
      </if>
      <if test="valid_date != null" >
        valid_date = #{valid_date,jdbcType=DATE},
      </if>
      <if test="invalid_date != null" >
        invalid_date = #{invalid_date,jdbcType=DATE},
      </if>
      <if test="create_date != null" >
        create_date = #{create_date,jdbcType=DATE},
      </if>
      <if test="modify_date != null" >
        modify_date = #{modify_date,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hrbb.loan.pos.dao.entity.TApprovingRateUplimitConfig" >
    update t_approving_rate_uplimit
    set amt_uplimit = #{amt_uplimit,jdbcType=DOUBLE},
      rate_uplimit = #{rate_uplimit,jdbcType=DOUBLE},
      deleted_flag = #{deleted_flag,jdbcType=VARCHAR},
      valid_date = #{valid_date,jdbcType=DATE},
      invalid_date = #{invalid_date,jdbcType=DATE},
      create_date = #{create_date,jdbcType=DATE},
      modify_date = #{modify_date,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectListBySelective" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from t_approving_rate_uplimit
   	where 1=1
	<if test="amt_uplimit != null">
		AND amt_uplimit = #{amt_uplimit}
	</if>
	<if test="rate_uplimit != null">
		AND rate_uplimit = #{rate_uplimit}
	</if>
	<if test="startPage != null">
		LIMIT #{startPage}, #{limit}
	</if>
  </select>
  <select id="countListBySelective" resultType="Long" parameterType="map">
		select count(*)
		from t_approving_rate_uplimit
		 	where 1=1
	<if test="amt_uplimit != null">
		AND amt_uplimit = #{amt_uplimit}
	</if>
	<if test="rate_uplimit != null">
		AND rate_uplimit = #{rate_uplimit}
	</if>
	</select>
	<select id="selectApprovingRateUplimitConfigByRegcode" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_approving_rate_uplimit
    where amt_uplimit = #{amt_uplimit,jdbcType=VARCHAR}
   </select>
   <delete id="deleteApprovingRateUplimitConfigByID" parameterType="java.lang.String" >
    delete from t_approving_rate_uplimit
    where id = #{id,jdbcType=INTEGER}
  </delete>
</mapper>