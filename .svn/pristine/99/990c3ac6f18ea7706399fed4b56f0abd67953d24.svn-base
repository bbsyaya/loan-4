package com.hrbb.test;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.UUID;

import org.junit.Test;

public class UploadFileToSftp{
    String end = "\r\n";  
    String twoHyphens = "--";  
    String boundary = "******";
    
//	@Test
//	public void uploadToSftp(){
//		File file = new File("D:\\LO2015042912243647895770895700.gz");
////		String str="http://10.1.5.224:13388/loan-ftp-web/FtpTransUpload.do";
//		String str="http://localhost:8080/loan-ftp-web/FtpTransUpload.do";
//		String boundary = "******"; 
//        try {
//            URL url=new URL(str);
//            HttpURLConnection connection=(HttpURLConnection)url.openConnection();
//            connection.setDoInput(true);
//            connection.setDoOutput(true);
//            connection.setRequestMethod("POST");
//            connection.addRequestProperty("FileName", "LO2015042912243647895770895700.gz");
////            connection.setRequestProperty("content-type", "text/html");
//            connection.setRequestProperty("instno", "UMI");
//            connection.setRequestProperty("Content-Type",
//                "multipart/form-data;boundary=" + boundary);
//            OutputStream  out=connection.getOutputStream();
//            DataOutputStream dos = new DataOutputStream(out);
//            
//            
//            //读取文件上传到服务器
//            FileInputStream fileInputStream=new FileInputStream(file);
//            byte[]bytes=new byte[1024];
//            int numReadByte=0;
//            while((numReadByte=fileInputStream.read(bytes,0,1024))>0)
//            {
//                out.write(bytes, 0, numReadByte);
//            }
//
//            out.flush();
//            fileInputStream.close();
//            out.close();
//            //读取URLConnection的响应
//            DataInputStream in=new DataInputStream(connection.getInputStream());
//            String resp = readContent(in);
//            in.close();
//            System.out.println(resp);
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//        
//    }
	
	@Test
	public void upload() {
        OutputStream httpOS = null;
        InputStream httpIS = null;
        DataOutputStream dos = null;
        BufferedInputStream bis = null;
        String filePath = "D:\\Desktop.zip";
        String str="http://10.1.5.224:13388/loan-ftp-web/FtpTransUpload.do";
//        String str="http://localhost:8080/loan-ftp-web/FtpTransUpload.do";

        FileInputStream fis = null;
        try {
            UUID uuid = UUID.randomUUID();
            String res = "" + uuid.getMostSignificantBits();
            if (res.startsWith("-")) {
                res = res.substring(1);
            }
        //  String boundary = LINE_TAG + res;
            String fileName = new File(filePath).getName();

            URL url = new URL(str);
            HttpURLConnection httpURLConnection = (HttpURLConnection) url
                    .openConnection();
            httpURLConnection.setDoInput(true);
            httpURLConnection.setDoOutput(true);
            httpURLConnection.setUseCaches(false);
            httpURLConnection.setRequestMethod("POST");
            httpURLConnection.setRequestProperty("Connection", "Keep-Alive");
            httpURLConnection.setRequestProperty("Charset", "UTF-8");
            httpURLConnection.setRequestProperty("Content-Type",
                    "multipart/form-data;boundary=" + boundary);
//          httpURLConnection.setRequestProperty("fileName", fileName);
            httpURLConnection.setRequestProperty("instno","UMI");
            
            httpOS = httpURLConnection.getOutputStream();
            dos = new DataOutputStream(httpOS);
            dos.writeBytes(twoHyphens + boundary + end);
            dos.writeBytes("Content-Disposition: form-data; name=\"file\"; filename=\""
                    + fileName + "\"" + end);
            dos.writeBytes(end);
            // 读取文件写入到服务器
            fis = new FileInputStream(filePath);
            bis = new BufferedInputStream(fis);
            byte[] buffer = new byte[1024];
            int count = 0;
            while ((count = bis.read(buffer)) != -1) {
                dos.write(buffer, 0, count);
            }
            dos.writeBytes(end);
            dos.writeBytes(twoHyphens + boundary + twoHyphens + end);
            dos.flush();

            // 读取服务器返回结果
            httpIS = httpURLConnection.getInputStream();
            String resp = readContent(httpIS);
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                
                if (dos != null) {
                    dos.close();
                }
                if (bis != null) {
                    bis.close();
                }
                if (fis != null) {
                    fis.close();
                }
                
                if (httpOS != null) {
                    httpOS.close();
                }
         
            } catch (IOException e) {
                e.printStackTrace();
            }

        }
    }
	
	
	
	   private String readContent(InputStream is) {
	        String content = null;
	        StringBuffer sb = new StringBuffer();
	        BufferedReader br = null;
	        try {
	            br = new BufferedReader(new InputStreamReader(is));
	            while ((content = br.readLine()) != null) {
	                sb.append(content);
	            }
	            content = sb.toString();
	        } catch (IOException e) {
	            e.printStackTrace();
	        } finally {
	            try {
	                br.close();
	                is.close();
	            } catch (IOException e) {
	               e.printStackTrace();
	            }
	        }

	        return content;
	    }
	
}
